name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
    MONGO_URI: â€˜mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: superuser
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit_testing:
        name: Unit Testing
        services:
          mongo-db:
            image: siddharth67/mongo-db:non-prod
            ports:
              - 27017:27017
        env:
          MONGO_URI: 'mongodb://localhost:27017/superData'
          MONGO_USERNAME: non-prod-user
          MONGO_PASSWORD: non-prod-password
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.nodejs_version }}
        
        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json')}}

        
        - name: Install Dependencies
          run: npm install

        - name: Unit Testing
          id: nodejs-unit-testing
          run: npm test

        - name: Mocha App-Test Result
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: mocha app-test
            path: test-results.xml   
    code-coverage:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v3
          with:
            node-version: 18
        - run: npm install
        - continue-on-error: true
          run: npm run coverage
        - uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5


    docker:
      runs-on: ubuntu-latest
      needs:
        - code-coverage
        - unit-testing
      steps:
        - uses: actions/checkout@v4
        - uses: docker/login-action@v2.2.0
          with:
            registry: ghcr.io
            username: '${{ github.repository_owner }}'
            password: '${{ secrets.GITHUB_TOKEN }}'
        - uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: 'ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}'